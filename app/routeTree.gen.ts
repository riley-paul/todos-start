/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as WelcomeImport } from './routes/welcome'
import { Route as AppImport } from './routes/_app'
import { Route as AppWithAdderImport } from './routes/_app._withAdder'
import { Route as AppWithAdderIndexImport } from './routes/_app._withAdder.index'
import { Route as AppWithAdderTodosListIdImport } from './routes/_app._withAdder.todos.$listId'

// Create/Update Routes

const WelcomeRoute = WelcomeImport.update({
  id: '/welcome',
  path: '/welcome',
  getParentRoute: () => rootRoute,
} as any)

const AppRoute = AppImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const AppWithAdderRoute = AppWithAdderImport.update({
  id: '/_withAdder',
  getParentRoute: () => AppRoute,
} as any)

const AppWithAdderIndexRoute = AppWithAdderIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppWithAdderRoute,
} as any)

const AppWithAdderTodosListIdRoute = AppWithAdderTodosListIdImport.update({
  id: '/todos/$listId',
  path: '/todos/$listId',
  getParentRoute: () => AppWithAdderRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/welcome': {
      id: '/welcome'
      path: '/welcome'
      fullPath: '/welcome'
      preLoaderRoute: typeof WelcomeImport
      parentRoute: typeof rootRoute
    }
    '/_app/_withAdder': {
      id: '/_app/_withAdder'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppWithAdderImport
      parentRoute: typeof AppImport
    }
    '/_app/_withAdder/': {
      id: '/_app/_withAdder/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppWithAdderIndexImport
      parentRoute: typeof AppWithAdderImport
    }
    '/_app/_withAdder/todos/$listId': {
      id: '/_app/_withAdder/todos/$listId'
      path: '/todos/$listId'
      fullPath: '/todos/$listId'
      preLoaderRoute: typeof AppWithAdderTodosListIdImport
      parentRoute: typeof AppWithAdderImport
    }
  }
}

// Create and export the route tree

interface AppWithAdderRouteChildren {
  AppWithAdderIndexRoute: typeof AppWithAdderIndexRoute
  AppWithAdderTodosListIdRoute: typeof AppWithAdderTodosListIdRoute
}

const AppWithAdderRouteChildren: AppWithAdderRouteChildren = {
  AppWithAdderIndexRoute: AppWithAdderIndexRoute,
  AppWithAdderTodosListIdRoute: AppWithAdderTodosListIdRoute,
}

const AppWithAdderRouteWithChildren = AppWithAdderRoute._addFileChildren(
  AppWithAdderRouteChildren,
)

interface AppRouteChildren {
  AppWithAdderRoute: typeof AppWithAdderRouteWithChildren
}

const AppRouteChildren: AppRouteChildren = {
  AppWithAdderRoute: AppWithAdderRouteWithChildren,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AppWithAdderRouteWithChildren
  '/welcome': typeof WelcomeRoute
  '/': typeof AppWithAdderIndexRoute
  '/todos/$listId': typeof AppWithAdderTodosListIdRoute
}

export interface FileRoutesByTo {
  '': typeof AppRouteWithChildren
  '/welcome': typeof WelcomeRoute
  '/': typeof AppWithAdderIndexRoute
  '/todos/$listId': typeof AppWithAdderTodosListIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_app': typeof AppRouteWithChildren
  '/welcome': typeof WelcomeRoute
  '/_app/_withAdder': typeof AppWithAdderRouteWithChildren
  '/_app/_withAdder/': typeof AppWithAdderIndexRoute
  '/_app/_withAdder/todos/$listId': typeof AppWithAdderTodosListIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/welcome' | '/' | '/todos/$listId'
  fileRoutesByTo: FileRoutesByTo
  to: '' | '/welcome' | '/' | '/todos/$listId'
  id:
    | '__root__'
    | '/_app'
    | '/welcome'
    | '/_app/_withAdder'
    | '/_app/_withAdder/'
    | '/_app/_withAdder/todos/$listId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AppRoute: typeof AppRouteWithChildren
  WelcomeRoute: typeof WelcomeRoute
}

const rootRouteChildren: RootRouteChildren = {
  AppRoute: AppRouteWithChildren,
  WelcomeRoute: WelcomeRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_app",
        "/welcome"
      ]
    },
    "/_app": {
      "filePath": "_app.tsx",
      "children": [
        "/_app/_withAdder"
      ]
    },
    "/welcome": {
      "filePath": "welcome.tsx"
    },
    "/_app/_withAdder": {
      "filePath": "_app._withAdder.tsx",
      "parent": "/_app",
      "children": [
        "/_app/_withAdder/",
        "/_app/_withAdder/todos/$listId"
      ]
    },
    "/_app/_withAdder/": {
      "filePath": "_app._withAdder.index.tsx",
      "parent": "/_app/_withAdder"
    },
    "/_app/_withAdder/todos/$listId": {
      "filePath": "_app._withAdder.todos.$listId.tsx",
      "parent": "/_app/_withAdder"
    }
  }
}
ROUTE_MANIFEST_END */
